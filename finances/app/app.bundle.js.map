{"version":3,"sources":["webpack:///webpack/bootstrap 4b969ba9d45a0dd4deb9","webpack:///./app/main.js","webpack:///external \"electron\"","webpack:///./app/tsapp.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA,sDAAqD,wBAAwB;AAC7E;AACA;AACA;AACA,UAAS;AACT,QAAO;;;;;;;;;ACbP,sC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,sDAAqD,0BAA0B;AAC/E;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4b969ba9d45a0dd4deb9\n **/","var electron = require('electron');\r\nvar tsApp = require('./tsapp.ts');\r\n\r\nelectron.app.on('window-all-closed', function() {\r\n        if (process.platform != 'darwin') electron.app.quit();\r\n      });\r\n\r\n      electron.app.on('ready', function() {\r\n        var mainWindow = new electron.BrowserWindow({width: 800, height: 600});\r\n        mainWindow.loadURL('file://' + __dirname + '/index.html');\r\n        mainWindow.on('closed', function() {\r\n          mainWindow = null;\r\n        });\r\n      });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/main.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = require(\"electron\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"electron\"\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\r\nfunction run(electron, process, dirName) {\r\n    electron.app.on('window-all-closed', function () {\r\n        if (process.platform != 'darwin')\r\n            electron.app.quit();\r\n    });\r\n    electron.app.on('ready', function () {\r\n        var mainWindow = new electron.BrowserWindow({ width: 800, height: 600 });\r\n        mainWindow.loadURL('file://' + dirName + '/index.html');\r\n        mainWindow.on('closed', function () {\r\n            mainWindow = null;\r\n        });\r\n    });\r\n}\r\nexports.run = run;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/tsapp.ts\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}